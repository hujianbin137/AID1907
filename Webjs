元素绑定事件：	
	<!--实现点击按钮在控制台输出-->
	<button onclick="console.log('Hello World');">点击</button>
文件内嵌：
	<script type="text/javascript">
	alert("网页警告框");
	</script>
外部链接：
	<script src="index.JavaScript"></script>
JavaScript 输入和输出语句：
	alert("");普通的网页弹框
	console.log();控制台输出,多用于代码调试
	document.write("Hello");实现在动态在网页中写入内容
	1. 可以识别HTML标签,脚本代码可以在文档任何地方书写,如果是普通写入(不涉及事
	件),区分代码的书写位置插入
	2. 文档渲染结束后,再次执行此方法,会重写网页内容
事件函数分类：
	onclick //单击
	ondblclick //双击
	onmouseover //鼠标移入
	onmouseout
	//鼠标移出
	onmousemove //鼠标移动
获取元素节点：
	根据id属性值取元素节点
	var elem = document.getElementById("");
	参数 : id属性值
	返回值 : 元素节点
事件绑定方式：
	1. 内联方式 将事件名称作为标签属性绑定到元素上 例 :
	<button onclick="alert()">点击</button>
	2. 动态绑定 获取元素节点,动态添加事件 例 :
	btn.onclick = function (){
	};

js基础语法：
	语法规范：
		1. JavaScript是由语句组成,语句由关键字,变量,常量,运算符,方法组成。
		2. 分号可以作为语句结束的标志,也可以省略
		3. JavaScript严格区分大小写
		4. 注释语法 单行注释使用 // 多行注释使用 /* */
	
	JavaScript的变量与常量：
		变量：var
			2. 语法 : 使用关键var声明,自定义变量名
				var a; //变量声明
				a = 100; //变量赋值
				var b = 200; //声明并赋值
				var m,n,k;
				//同时声明多个变量
				var j = 10,c = 20; //同时声明并赋值多个变量
			3.命名规范：
				变量名,常量名,函数名,方法名自定义,可以由数字,字母,下划线,$组成,禁止以数字
				开头
				禁止与关键字冲突(var const function if else for while do break case switch return class)
				变量名严格区分大小写
				4. 使用注意 :
				变量如果省略 var 关键字,并且未赋值,直接访问会报错
				变量使用 var 关键字声明但未赋值,变量初始值为 undefined
				变量省略 var 关键字声明,已被赋值,可正常使用,影响变量作用域

		常量：const
			1. 作用 : 存储一经定义就无法修改的数据
			2. 语法 : 必须声明的同时赋值
			命名规范同变量,为了区分变量,常量名采用全大写字母
操作小数位：toFixed(n); 保留小数点后 n 位,并且四舍五入
数据类型：
	number数值类型  string字符串类型  boolean布尔类型  undefined特殊值
	null空类型 定义对象时引用
检测数据类型： typeof
数据类型转换：
	强制类型转换：toString()返回转换后的字符串
		     Number(参数) 成功返回值 失败返回NaN
隐式类型转换：
	1. 当字符串与其他数据类型进行"+"运算时,表示字符串的拼接,不再是数学运算 转换规则 :将非字
	符串类型的数据转换成字符串之后进行拼接,最终结果为字符串
	2. 其他情况下,一律将操作数转number进行数学运算

逻辑运算符：
	1. && 逻辑与 表达式同时成立,最终结果才为true;1则1
	2. || 逻辑或 表达式中只要有一个成立,最终结果即为true;有1则1
	3. ! 逻辑非 对已有表达式的结果取反 注意:除零值以外,所有值都为真
三目运算符：表达式1 ? 表达式2 : 表达式3;
	1. 判断表达式1是否成立,返回布尔值;
	2. 如果表达式1成立,执行表达式2;
	3. 如果表达式1不成立,执行表达式3;

元素的显示和隐藏：元素.style.dispaly='none'
	1. 如果 display 值为 “none” 则表示隐藏。
	2. 如果 display 值为 ”block“ 表示显示。


1.先写页面
2.再写样式
3.逻辑编写
	
		
	
